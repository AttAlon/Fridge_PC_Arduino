
#define DOOR_OPEN_STOP_COOLING_TIME 0//<< - number - >>
#define DOOR_OPEN_SOUND_ALERT_TIME 0//<< - number - >>

#define DEFROST_WAIT_TIME 0//<< - number - >>
#define DEFROST_ON_TIME 0//<< - number - >>

int DOOR_OPEN_COUNT = 0;
int DEFROST_WAIT_COUNT = 0;
int DEFROST_ON_COUNT = 0;


void doorCheck ();
bool isDoorOpen ();       // <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--
void doorOpenLed_on ();
void doorOpenLed_off ();


void defrostCheck ();
void defrostOn ();        // <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--
void defrostOff ();       // <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--


void coolCheck ();
int readTemp ();          // <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--

void stopCool ();         // <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--
void startCool();         // <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--
void stopFan();           // <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--
void startFan();          // <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--

void startSondAlert ();   // <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--
void stopSondAlert ();    // <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--



void setup()
{

  
}

void loop()
{
  doorCheck();
  defrostCheck ();
  coolCheck ();

  delay(1000); // wait for a second
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void doorCheck ()
{
  if (isDoorOpen())
  {
    doorOpenLed_on();
    DOOR_OPEN_COUNT++;
    
  }
  else
  {
    doorOpenLed_off ();
    DOOR_OPEN_COUNT = 0;
    
  }
}

// <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--
bool isDoorOpen ()
{
  return false;
}
// <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--

void doorOpenLed_on ()
{
  // <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--
  //DOOR LED ON
  // <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--
  
  //check stop cooling time
  if (DOOR_OPEN_STOP_COOLING_TIME <= DOOR_OPEN_COUNT)
  {
    //stop coolong
    stopCool();
    stopFan();
  }

  //check sound alert time
  if(DOOR_OPEN_SOUND_ALERT_TIME <= DOOR_OPEN_COUNT)
  {
    //start the sond alert
    startSondAlert ();
  }
}


void doorOpenLed_off ()
{
  // <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--
  //DOOR LED OFF
  // <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--


  //return the fan
  startFan ();
  
  //stop the alert
  stopSondAlert ();  
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void defrostCheck ()
{
  if (DEFROST_WAIT_TIME < DEFROST_WAIT_COUNT)
  {
    //start the defrost
    defrostOn();
    DEFROST_ON_COUNT++;
  }

  if (DEFROST_ON_TIME < DEFROST_ON_COUNT)
  {
    //stop the defrost
    defrostOff();

    //reset all the counters
    DEFROST_WAIT_COUNT = 0;
    DEFROST_ON_COUNT = 0;
  }
  
  DEFROST_WAIT_COUNT++;
}


void defrostOn ()
{
  // <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--
  //start the defrost
  // <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--
  
  stopCool();
  stopFan();
}

void defrostOff ()
{
  // <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--
  //stop the defrost
  // <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--   <--
   
  startFan();
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void coolCheck()
{
  // if there is'nt prohibition on the cooling funcsen
  if (DOOR_OPEN_COUNT == 0 && DEFROST_ON_COUNT == 0)
  {
    int tempNow = readTemp();

  }
}  

int readTemp() 
{   

}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//cool
void stopCool ()
{
}

void startCool()
{
  
}
//cool

//fan
void stopFan()           
{
  
}

void startFan()
{
  
}
//fan

//SondAlert
void startSondAlert ()
{
  
}

void stopSondAlert ()
{

}
//SondAlert
